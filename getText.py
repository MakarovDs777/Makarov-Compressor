from itertools import chain
from ast import literal_eval

# Ваш массив с символами и массивами индексов
numbers = [
    32, 50, 112, 51, 77, 114, 105, 98, 111, 110, 116, 
    48, 115, 46, 107, 41, 101, 10, 109, 52, 97, 34, 121, 
    61, 102, 40, 103, 44, 75, 58, 100, 49, 66, 164, 6, 
    15, 17, 40, 42, 45, 49, 50, 51, 52, 70, 72, 75, 79, 
    80, 81, 82, 97, 98, 99, 103, 105, 108, 112, 113, 114, 
    115, 132, 133, 134, 135, 136, 140, 142, 145, 149, 150, 
    151, 152, 169, 170, 171, 172, 173, 164, 109, 164, 2, 
    53, 83, 116, 127, 153, 164, 146, 164, 90, 164, 4, 
    7, 18, 25, 54, 84, 117, 154, 162, 164, 0, 29, 38, 
    55, 68, 85, 101, 118, 138, 155, 164, 164, 163, 164, 
    3, 11, 22, 61, 91, 124, 126, 161, 164, 9, 20, 27, 
    30, 56, 86, 119, 156, 164, 5, 31, 57, 62, 87, 92, 
    120, 125, 157, 164, 33, 46, 164, 129, 166, 164, 24, 
    164, 64, 94, 164, 36, 66, 96, 131, 168, 164, 128, 
    165, 164, 13, 37, 48, 67, 78, 100, 111, 137, 148, 
    174, 164, 1, 12, 23, 164, 35, 164, 8, 19, 26, 164, 
    59, 65, 89, 95, 122, 130, 159, 167, 164, 63, 93, 
    164, 16, 43, 44, 73, 74, 106, 107, 143, 144, 164, 
    39, 69, 102, 139, 164, 32, 58, 88, 121, 158, 164, 
    14, 41, 71, 104, 141, 164, 34, 164, 60, 123, 164, 
    47, 77, 110, 147, 164, 10, 21, 28, 164, 76, 164, 160
]

# Превращает массив с массивами в один массив
def decode(numbers):
    # Определяем позицию разделителя и извлекаем символы и индексы
    max_index = numbers.index(max(numbers)) + 1
    symbols = [chr(num) for num in numbers[:max_index - 1]]  # Символы до разделителя
    indexes = numbers[max_index:]  # Индексы после разделителя

    # Восстанавливаем текст
    result = [''] * (max(indexes) + 1)  # Создаем массив нужного размера
    for i, idx in enumerate(indexes):
        if i < len(symbols):
            result[idx] = symbols[i]

    return ''.join(result).strip()  # Объединяем символы в строку и убираем лишние пробелы

# Восстанавливаем текст и выводим результат
restored_text = decode(numbers)
print(restored_text)
